식별자: 내가 만드는 클래스, 메소드, 변수 이름을 정해주는 것을 말한다.

식별자의 반드시 지켜야하는 규칙
 -식별자에는 공백을 포함할 수 없다.
 -식별자의 첫글자는 영문이거나 _, # 기호만 가능.

가급적이면 지켜야하는 규칙
 -클래스이름의 첫글자는 대문자로 시작하도록 한다.
 -변수이름과 메소드이름의 첫글자는 소문자로 시작한다.
 -두개이상의 단어로 합쳐지는 경우 두번째 시작하는 단어를 
  대문자로 하거나 혹은_로 연결하여 읽기 쉽게한다.
 
 ----------------------------------------------------------------------------------
 자바의 자료형
	기본자료형: boolean, char, byte, short, int*, long, float, double*
	참조자료형

-----------------------------------------------------------------------------------
연산자
	산술연산자
		+
		-
		*
		/(몫)
		%(나머지)

		4+2의 결과는 int
		4.0+2.0의 결과는 double
		4+2.0의 결과는 double. 자료형이 다른것끼리 연산을 하면
			그중에 메모리 크기가 큰 자료형의 결과가된다.
	
	비교연산자
		>
		<
		>=
		<=
		==
		!=
		
		비교연산을 수행한 결과의 자료형은? boolean (true or false)
	
	논리연산: 판별해야하는 조건식이 두개이상일 때 사용하는 연산자.
		&&(논리곱) 두개의 조건식을 모두 만족
		||(논리합) 둘중에 하나라도 만족
	
	증감연산자
		++: 변수에 1 증가한 값을 다시 변수에 저장
		    a = a+1 == a++
		    ++a는 1을 먼저 증가

		--: 변수에 1 감소한 값을 다시 변수에 저장
		    a = a-1 == a--
		    --a는 1을 먼저 감소

		 이러한 증감연산자는 변수명 앞에 올 수도 있고
		 뒤에 올 수도 있다. 때에 따라 다르게 동작!
	
	비트연산자: 비트의 상태(2진수의 상태)에서 동작하는 연산자. 0,1
		& 비트곱: 두개의 비트가 모두 1일 때만 결과가 1이 된다.
		| 비트합: 두개의 비트 중에 하나라도 1이면 결과가 1이 된다.
		^ 비트차: 두개의 비트가 서로 다른 상태일 때 결과가 1이된다.
	
	&과 |은 조건식에서 논리연산자로도 사용할 수 있다.
		&&, & (~이고)
		||, | (~이거나)
	
		&&와 & 모두 논리곱연산자이지만 차이가 있다.
		&&와 & 모두 두개의 조건식이 모두 참인지 판별하는 것은
		동일하지만 &&은 short cut operation을 수행한다. 
		왼쪽의 조건식을 판별하여 만약 거짓이라면 뒤에오는 조건식을
		아예 수행하지 않는다는 것이다. 

		if (조건식1 && 조건식2) 

		if (조건식1 & 조건식2)
	
	비트이동연산자(shift연산자)
		<<	왼쪽으로 비트를 이동시키는 연산자. 주어진 수에 *2
		>>	오른쪽으로 비트를 이동시키는 연산자. 주어진 수에 /2

		이진수로 만들어 주어진 비트 수만큼 이동
		ex) 8의 이진수는 1000. 이것을 왼쪽으로 
		한비트 이동하면 10000이므로 16. 오른쪽으로
		한비트 이동하면 100이므로 4이다.
	
	복합치환연산자
		변수에 어떤 연산을 수해하여 그 결과를 다시 그 변수에 저장하기 위한 연산자들
		+=
		-=
		*=
		/=
		...

		sum = sum+i;
		sum += i;
	
	삼항연산자(조건식연산자)
		
	(항1)?항2:항3
	
	항1에는 조건식이 온다
	항1의 조건식이 참일 때 항2를 수행
	항1의 조건식이 거짓일 때 항3을 수행
	항2와 항3에는 문장이 올 수 없고 수식이나 값이 올 수 있다.

------------------------------------------------------------------------------------------------

<선택문>
상황에 따라 동작시켜야하는 명령이 달라지는 경우에 사용하는 문장을 말한다.
선택문의 종류는 if와 switch가 있다.

<if문을 사용하는 형식>
if(조건식)
	참일 때 실행시킬 명령어
else if(다른 조건식)
	참일 때 실행시킬 명령어
else
	거짓일 때 실행시킬 명령어

------------------------------------------------------------------------------------------------

if가 있다고해서 반드시 else가 올 필요는 없다.
때에 따라 내가 해결해야하는 문제에 따라 else가 올 수도 있고 오지않을 수도 있다.
a;
b;
if(조건식)
	c;
d;
e;
-------------------------------------------------------------------------------------------------
중첩if문: if문 안에 또 다른 조건을 판별하는 if가 올 수도 있다.

a;
b;
if(조건1)
	if(조건2)
		c;
	else
		d;
else
	if(조건3)
		e;
	else
		f;
g;

경우의 수가 두가지 이상일 경으
if(조건식1)
	a;
else if(조건식2)
	b;
else if(조건식3)
	c;
else
	d;