setter
멤버변수의 값을 변경시키기 위한 메소드.
변경시키기 위한 값을 매개변수로 전달받아
그것을 멤버변수에 대입한다.

기본생성자
매개변수를 하나도 갖지않는 생성자
-----------------------------------------------------------------------------------------
Bird
	속성
		이름		String	type	"참새"
		날개		boolean wing	true, false
		색상		String	color	"노란"

	동작
		날다		void fly()	"훨~훨~"



비행기
	속성
		이름
		날개
		색상
		엔진
		
	동작
		날다

<상속>
어떤 클래스를 설계하려고 속성과 동작을 분석하였더니
내가 설계하려고 하는 대부분의 속성과 동작을 가지고있는
클래스가 이미 있다.
그럴때는 그것에 대하여 다시 정의할 필요없이 이미 있는
클래스를 확장하여 새로 추가되는 속성과 동작만 만들면 된다.
==> 이것을 클래스의 '상속'이라고 한다.

==> "코드의 재사용성"을 높일 수 있다.
==> 시간이나 비용을 줄일 수 있다.

메소드 오버라이딩 method overriding
상속받은 메소드(기능)를 재정의. 
멤버메소드의 자료형과 개수는 반드시 같아야함.

protected
접근제어자가 protected로 설정되었다면 protected가 
붙은 변수, 메소드는 동일 패키지내의 클래스 또는 
해당 클래스를 상속받은 외부 패키지의 클래스에서 접근이 가능하다.
-----------------------------------------------------------------------------------------
class A
{
}
새로운 클래스 B를 만들려고 하는데 이미 있는 클래스 A가 B에 필요한
대부분의 속성과 동작을 가지고있다면 A룰상속받아 새로운 기능을 
추가하여 사용한다.

class B extends A
{
}
A를 부모(슈퍼)클래스
B를 자식(서브)클래스라고 한다.

자식클래스는 부모의 모든 속성과 동작을 물려받지만, 부모의
private영역에는 접근할 수 없다.
만약 외부의 다른 클래스로부터 접근을 막고 자식클래스들에게
접근을 허용하고자 한다면 protected를 사용한다.

또한, 자식클래스는 부모의 모든 사용할 수 있느나
만약 부모의 기능이 자신에게 맞지 않는다면
재정의 할 수도 있다.


<overriding, overloading>
오버로딩은 같은 이름의 메소드를 정의하는 것.이를 위해서는
매개변수의 개수나 자료형이 달라야한다.

오버라이딩은 상속과 관련이 있고 부모로부터 물려받은 메소드를
자식에게 맞게 재정의 하는 것을 말한다. 이때는 메소드의 이름뿐
아니라 매개변수의 개수와 자료형까지 일치되게 재정의해야한다.

-----------------------------------------------------------------------------------------
<추상클래스와 추상메소드>
미래에 만들어질 후손들이 가져야할 속성과 동작들을
미리 부모클래스에서 메소드 구체화를할 수가 없다. 
(메소드 안의 내용을 정할 수가 없다.)
이런 경우 메소드의 body를 적지않고 메소드 선언부만
명시하고 메소드명 앞에 abstract키워드를 붙여 반드시
자식클래스들이 자신에게 맞도록 재정의(overriding)
하도록 강제한다.
이러한 메소드를 "추상메소드"라고 한다.

이와같이 어떤 클래스가 추상메소드를 하나라도 가지고
있으면 그 클래스 자신이 추상클래스가 되어야한다.
즉 클래스명 앞에 abstract키워드를 붙여야한다.