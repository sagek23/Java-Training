추상클래스와 추상메소드
추상메소드는 형식만 정의되고 몸체가 정의되징낳은 메소드. 추상메소드는 서브클래스에서
몸체가 구현되어야하므로 추상메소드이면서 final 메소드는 존재할 수 없다.

추상클래스는 추상메소드를 포함하는 클래스로, 객체를 생성시킬수 없어 상속되어 사용되는
클래스이다. 
-------------------------------------------------------------------------------
생성자
객체를 생성하기위해 클래스에 정의하는 것.
객체를 생성할 때 생성자가 자동으로 호출되며 일반메소드처럼 임의로 호출할 수 없다.
생성자의 기능은 객체가 가지는 필드의 값을 초기화 하는 것이고, 생성자의 이름은 클래스의 
이름과 같아야한다. 
클래스정의에서 생성자를 정의하지않으면 컴파일러는 매개변수를 갖지않는 기본생성자를 자동으로
만들어준다. 
슈퍼클래스를 상속받아 사용할 경우 슈퍼클래스의 생성자가 자동으로 호출된다. 
일반적으로 생성자의 접근제어자는 public이다. 

-------------------------------------------------------------------------------
this
인스턴스 메소드에서만 사용된다. 인스턴스 메소드가 실행될 때 this는 메소드를 실행시키는 
객체의 참조값을 가진다. this를 사용하여 객체의 멤버에 접근할 수 있다. 

this()
생성자의 몸체 맨 앞에서 사용되며 같은 클래스의 다른 생성자를 호출하는 것이다.

-------------------------------------------------------------------------------
super
인스턴스 메소드에서만 사용된다. 현재 객체의 참조값을 가지나 자료형이 직계상위클래스의 유형이다.
서브클래스와 슈퍼클래스에서 같은 이름의 필드를 정의하고 있다면, 서브클래스에서 슈퍼클래스로부터
상속받은 같은 이름의 필드를 참조할 때 super를 사용한다.

super()
생성자의 몸체 맨앞에 사용되며 슈퍼클래스의 생성자를 호출하는 것이다.

-------------------------------------------------------------------------------
오버로딩 
하나의 클래스에 같은 이름의 메소드가 여러개 정의되는 것.
오버로딩된 메소드들은 매개변수의 개수와 자료형에 따라 구별되어야한다.
메소드가 호출되면 메소드의 이름, 매개변수의 개수와 자료형이 정확하게 일치하는 것이 선택되어
실행된다.

오버라이딩
서브클래스가 슈퍼클래스에서 정의된 메소드를 그대로 상속받지 않고 재정의하는 것이다.
메소드 오버라이딩할 때는 메소드의 이름과 자료형 및 매개변수가 정확히 일치해야한다. 또한 접근제어자는
일치하거나 접근 범위를 넓게해야한다.

-------------------------------------------------------------------------------
static
static메소드는 객체와 상관없이 호출되는 메소드로 클래스이름을 통해 호출될 수 있는 메소드이다.
static메소드는 특정객체가 소유하고 있는 필드를 다룰 수 없으므로 this나 super를 사용할 수 없다.
static메소드에서는 static이 아닌 필드나 메소드를 사용할 수 없다.