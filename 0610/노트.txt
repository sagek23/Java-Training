**생성자에 대하여 아는대로 쓰시오.
객체생성시에 자동수행
멤버변수들을 특정한 값으로 초기화하기위한 특수한 메소드
생성자는 클래스의 이름과 같은 이름의 메소드
생성자는 중복정의 가능
중복정의하기 위해서는 매개변수의 개수나 자료형이 달라야함.
생성자는 일반 메소드와 달리 리턴타입을 갖지 않는다.
사용자가 특별히 생성자를 만들지않으면 자바는 기본생성자 제공.
그러나 사용자가 생성자를 만들기 시작하면 더이상 기본생성자를 
제공하지 않는다. 필요하다면 사용자가 만들어 사용

**this와 this()
this()
생성자의 몸체 맨 앞에서 사용되며 같은 클래스의 다른 생성자를 호출하는 것이다.

this: 생성자나 메소드의 매개변수 이름을 의미있는 이름으로 정해주다 보면
멤버의 이름이 겹치게된다. 이때 멤버 자신을 구분하기 위해 this를 사용

**super와 super()
super()는 자식의 생성자안에서 부모의 생성자를 요구할 때 super()를 사용.
반드시 첫번째 문장에 와야한다.

super는 상속관계에 있을 때 부모클래스 멤버와 동일한 멤버를 갖게되면 
부모의 멤버는 무시되고 자식의 멤버가 우선순위가 높다.
이때 부모의 동일한 멤버를 사용하기 위하여 super를 사용한다.

**method overloading과 method overriding
메소드 오버로딩은 같은 이름의 메소드를 여러차례(중복) 정의 하는것.
메소드의 매개변수의 개수나 자료형이 달라야한다.

메소드 오버라이딩은 상속받은 메소드를 재정의 하는 것.
매개변수의 개수와 매개변수 자료형(메소드의 시그너쳐)이 일치해야한다.

**추상메소드와 추상클래스
추상메소드 - 
미래에 만들어질 자식클래스들이 가져야할 속성들과 동작들을
미리 묶어 부모클래스를 만드는 것을 "일반화"한다라고 하고
일반화 과정에서 미래에 만들어질 후손클래스들이 반드시 가져야하는
동작인데 이 메소드를 구체화 할 수 없는 경우 body를 구현하지 않고
메소드 선언부만 갖는 메소드를 만든다. 이때 메소드 이름앞에 abstract
키워드를 넣는다. 

어떤 클래스가 추상메소드를 하나라도 갖는다면 그 클래스는 추상메소드가
되어야 한다. 클래스 이름 앞에 abstract 키워드를 넣는다.
추상클래스는 body가 구체화되지않은 메소드를 포함하고 있기 때문에 추상클래스의 
객체를 생성할 수 없다.

