select bookname from book where bookid = 1;

select bookname from book where price >=20000;

select sum(saleprice) from customer, orders 
where customer.custid = orders.custid and name = '박지성';
select sum(saleprice) from orders where custid = (select 
custid from customer where name = '박지성');
 
select count(orderkid) from customer, orders 
where customer.custid = orders.custid and name = '박지성';
select count(orderkid) from orders where custid =
(select custid from customer where name = '박지성');

select count(distinct publisher) from book, orders, customer  
where book.bookid = orders.bookid and customer.custid = 
orders.custid and name = '박지성';
select  count(distinct publisher) from book where bookid in (select 
bookid from orders where custid in (select custid from customer where
name = '박지성'));



select bookname, price, price-saleprice from book, orders,customer  
where book.bookid = orders.bookid and customer.custid = 
orders.custid and name = '박지성';


select bookname from book where bookid in (select bookid from book where bookid
not in (select bookid from orders where custid in (select custid from customer where
name = '박지성')));

select bookname from book 
minus 
select bookname from book, orders,customer  
where book.bookid = orders.bookid and customer.custid = 
orders.custid and name = '박지성';

------------------------------------------------------------------------------------
minus 연산자

select 조건문1
minus
select 조건문2

= 조건문1의 결과 - 조건문2의 결과

------------------------------------------------------------------------------------

select count(bookid) from book;

select count(distinct publisher) from book;

select name, address from customer;

select orderkid, orderdate from orders where orderdate 
between to_date('2014-07-04', 'yyyy-mm-dd')
and to_date ('2014-07-07', 'yyyy-mm-dd');


select orderkid, orderdate from orders where orderdate 
>= '2014-07-04' and orderdate <='2014-07-07';

select orderkid, orderdate from orders where orderdate 
not between '2014-07-04' and '2014-07-07';

select orderkid, orderdate from orders where orderdate 
< '2014-07-04' or orderdate > '2014-07-07';

select orderkid, orderdate from orders where orderdate 
not between to_date('2014-07-04', 'yyyy-mm-dd')
and to_date ('2014-07-07', 'yyyy-mm-dd');


select name, address from customer where name like '김%';

select name, address from customer  where name like '김%아';
select name, address from customer  where name like '김_아';


select name from customer where custid not in
(select custid from orders);

select sum(saleprice), avg(saleprice) from orders group by custid;
select bookid, count(*), sum(saleprice) from orders group by bookid;

select bookname, count(*), sum(saleprice) from orders o, book b where
o.bookid = b.bookid group by bookname order by bookname;

select name, sum(saleprice) from orders o, customer c 
where c.custid = o.custid group by name;

select name, bookname from book b, orders o, customer c 
where c.custid = o.custid and b.bookid = o.bookid;

도서의 가격과 판매가격의 차이가 가장 많은 주문

모든 구매내역에 대하여 도서으 가격과 판매가격의 차이를 출력
select bookname, abs(price - saleprice) from book b, orders o where b.bookid 
= o.bookid;  ==>A

A중에 가장 큰 값을 찾아라
select max(abs(price - saleprice)) from book b, orders o where b.bookid 
= o.bookid;==> max

모든 주문에 대하여 주문번호와 도서의 가격과 판매가격의 차이를 출력
select orderkid, abs(price-saleprice) from book b, orders o where b.bookid 
= o.bookid;==> B

B 중 차이가 max인 주문번호를 출력
select orderid from(select orderkid, abs(price-saleprice) from book b, orders o where b.bookid 
= o.bookid) B
where B.diff = (max);

