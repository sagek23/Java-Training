<데이터베이스 명령어>
1.DDL
2.DML
3.DCL

<DDL>
Data Definition Language

create -테이블 생성

alter - 테이블의 구조 변경
	새로운 컬럼 추가
	컬럼 삭제
	컬럼의 자료형, 크기 변경

drop - 테이블 삭제

<테이블 생성>
create table 테이블이름 (속성1 자료형, 속성2 자료형...)

<제약사항>
null
not null
unique
primary key
default
check
foreign key

==> 제약사항을 컬럼레벨에 설정할 수도 있고 테이블레벨에 
설정할 수도 있다.

<컬럼레벨의 제약사항 설정>
create table 테이블명(컬럼1 자료형 제약사항, 컬럼2 자료형 제약사항...)

<테이블레벨의 제약사항 설정>
create table 테이블명(컬럼1 자료형, 컬럼2 자료형....  제약사항들..)

계정 c##scott/tiger

create table dept(
dno number primary key, 
dname varchar2(20), 
dloc varchar2(20));

create table dept(
dno number,
dname varchar2(20),
dloc varchar2(20),
primary key (dno));

create table emp(
eno number primary key,
ename varchar2(20),
sal number,
dno number references dept(dno)
)

create table emp(
eno number,
ename varchar2(20),
sal number,
dno number,
primary key (eno),
foreign key(dno) references dept(dno)
);

------------------------------------------------------------------------------------
<테이블의 변경>
alter - 새로운 컬럼을 추가
	컬럼을 삭제
	컬럼을 변경

<새로운 컬럼을 추가>
alter table 테이블이름 add 컬럼명 자료형 제약

alter table emp add email varchar2(50);
alter table dept add tel varchar2(20);

<컬럼의 삭제>
alter table 테이블명 drop column 컬럼명

연습) 부서 테이블의 전화번호 컬럼 삭제
alter table dept drop column tel;


<컬럼의 자료형의 변경>
alter table 테이블명 modify 컬러명 새로운 자료형

alter table dept add tel number; ->
alter table dept modify tel varchar2(20);

<자료의 변경>
update emp set email = 'moon@bit.com' where eno = 1000;

------------------------------------------------------------------------------------

<DDL>
Data Definition Language

create -테이블 생성 
		1)컬럼레벨
		2)테이블 레벨

alter - 테이블의 구조 변경 
	새로운 컬럼 추가	add
	컬럼 삭제		drop
	컬럼의 자료형,		modify
	크기 변경

drop - 테이블 삭제

------------------------------------------------------------------------------------
<데이터 조작어 DML>

<자료의 추가>
insert into 테이블이름 values(값1, 값2, 값3....);
insert into 테이블이름 (컬럼1, 컬럼2...) values(값1, 값2, 값3....);


insert into dept values(600,'개발3부', '안양','111');
insert into dept(tel, dloc,dno) values('115','제주',700);

<자료의 수정>
update 테이블명 set 컬럼1=값1, 컬럼2=값2... [where 조건식];


연습) 홍길동의 직책을 '대리'로 수정
update emp set job='대리' where ename = '홍길동';

연습) '개발1부'의 모든 근로자의 급여를 10% 인상.
update emp set sal = sal*1.1 where dno = 300;
update emp set sal = sal*1.1 where dno = 
(select dno from dept where dname = '개발1부');

연습) 서울에 근무하는 직원들의 수당을 5% 삭감
update emp set comm = comm*0.95 where dno in 
(select dno from dept where dloc = '서울');


연습) '홍길동'의 급여와 수당을 '이선정'의 급여, 수당과 동일하게 변경
update emp set sal = (select sal from emp where ename = '이선정'), 
comm = (select comm from emp where ename = '이선정')
where ename = '홍길동';

연습) '서울'이외의 근무자들의 수당을 직책이 부장인 사람들의 
평균급여의 80%로 변경
update emp set comm = (select avg(sal) 
from emp where job = '부장')*0.8 where dno 
in (select dno from dept where dloc != '서울');

------------------------------------------------------------------------------------

<multiupdate>
update 테이블명 set (컬럼1, 컬럼2) = (서브쿼리)

update emp set (sal, comm) = 
(select sal, comm from emp where ename = '이선정') 
where ename = '홍길동';

------------------------------------------------------------------------------------

<자료의 삭제>
delete 테이블명 [where 조건식];

<존재하는 테이블의 구조와 데이터를 복사하여 테이블을 생성>
create table 테이블명 as select~

<존재하는 테이블의 구조만 복사하여 테이블을 생성>
create table 테이블명 as select ~ where 절대로 만족하지 않을 조건식

<테이블을 복사하여 새로운테이블을 생성할 때는 제약은 복사되지 않는다>

create table dept100 as select * from dept; 내용과 구조를 전부 복사

create table dept200 as select * from dept where 1=2;

연습) emp테이블의 구조와 내용을 복사하여 emp100을 생성
create table emp100 as select * from emp;

다음의 실습을 dept100, emp100에서 진행

연습) 홍길동 사원을 삭제
delete emp100 where ename = '홍길동';

연습) 개발1팀의 모든 직원을 삭제
delete emp100 where dno = (select dno where dname = '개발1팀');

연습)관리자보다 입사일이 빠른 사원을 삭제
delete emp100 where eno in (select e.eno from emp100 e, emp100 m
where e.mgr = m.eno and e.hiredate < m.hiredate) ;

연습) 개발2팀의 부서를 삭제
delete dept where dname = '개발2팀';
--> 무결성 제약조건 위배
dept와 emp는 서로 관계에 있고 emp의 eno는 dept의 dno를 참조하고 있다
emp에는 '개발2부'의 부서번호를 참조하고 있는 레코드가 있기 때문에 삭제할 수
없다. 

삭제하려면 자식테이블의 레코드를 처리한 후에 삭제할 수 있다.
(삭제될 부서에 근무하는 사원의 부서번호를 다른값으로 변경하거나 혹은 
해당 레코드를 삭제한후 해당 부서를 삭제할 수 있다.


------------------------------------------------------------------------------------
1) 사원의 이름과 직위를 출력
단, 사원의 이름은 '사원이름' 직위는 '사원직위' 머리글이 나오도록 출력
select ename 사원이름, job 사원직위 from emp;
select ename as 사원이름, job as 사원직위 from emp;

2) 300번 부서에 근무하는 모든 사원의 이름과 급여를 출력
select ename, sal from emp where dno = 300;

3)사원번호와 이름, 현재급여, 증가된 급여(열이름은 '증가액'), 10%인상된 급여
(열 이름은 '인상된 급여')를 사원번호 순으로 출력
select eno, ename, sal, sal*0.1 증가액, sal*1.1 "인상된 급여" from emp order 
by eno;

4) '김'으로 시작하는 모든 사원과 부서번호를 출력 
select ename, dno from emp where ename like '김%';

5) 모든 사원의 최대 및 최소급여, 합계 및 평균급여
열 이름은 각각 MAX, MIN, SUM, AVG로 한다. 단 소수점 이하는 반올림하여
정수로 출력

select max(sal) MAX, round(min(sal),0) MIN, round(sum(sal),0) SUM, 
round(avg(sal),0) AVG from emp;

round(컬럼, 자릿수)- 반올림해주는 함수

6) 직책이름과 직책별 동일한 직책의 사람수를 출력. 열 이름은 각각
'직책'과 '직책별 사원수'
select job 직책, count(*) "직책별 사원수" from emp group by job;

7)사원의 최대급여와 최소급여의 차액
select max(sal)-min(sal) from emp;

8) 300번 부서의 구성원 수와 사원별 급여의 합계, 평균을 출력
select count(*), sum(sal), avg(sal) from emp where dno = 300;

9) 평균급여가 가장 높은 부서번호를 출력

select dno, avg(sal) from emp group by dno
select max(avg(sal)) from emp group by dno); 

select dno from (select dno, avg(sal) from emp group by dno) A
where A.avg = (select max(avg(sal)) from emp group by dno);

10) 직책이 '사원'인 사람을 제외하고 각 직책별 사원의 총 급여가
 400 이상인 각 직책에 대해서 직책명과 직책별 평균급여를 출력하시오. 
 단, 평균급여의 내림차순 출력.

select job, avg(sal) from emp where job!= '사원' group by
job;

select job, avg(sal) from emp where job!= '사원'
group by job having sum(sal)>=400;


11) 전체사원 중에 직속상관이 있는 사원수를 출력
select count(*) from emp where mgr is not null;
==> null이 아닌 것을 표현하려면 is not null
null인 것을 표현하려면 is null.

12) Emp 테이블에서 이름, 급여, 수당, 총액을 구하여 총액이 많은 순서대로 출력.
단 수당이 null인 사람은 제외
select ename, sal, comm, sal+comm from emp where comm is not null order by
sal+comm desc;

13) 각 부서별로 같은 업무를 하는 사람의 인원수를 구하여 부서번호, 업무이름,
인원수를 출력
select dno, job, count(*) from emp group by dno, job;

14)사원이 한명도 없는 부서의 이름을 출력하시오.
select dname from dept where dno not in (select distinct dno from emp);

select dname from dept where dno not in 
(select distinct dno from emp where dno is not null);

------------------------------------------------------------------------------------
**서브쿼리의 결과가 null인 것이 있으면 not in 연산이 제대로 동작하지 않는다.

null인지 확인			is null
null이 아닌지 확인		is not null


select dno from dept where dname is null;
select dno from dept where dname = null;
------------------------------------------------------------------------------------
15) 같은 직책의 사람의 수가 4명 이상인 직책과 인원수 출력
select job, count(*) from emp group by job having count(*)>=4;

16) 사원번호가 1010이상, 1020번 이하인 사원의 이름을 출력
select eno, ename from emp where eno between 1010 and 1020;

17) 사원의 이름과 사원의 부서를 출력
select ename, dname   from emp e, dept d where e.dno= d.dno;

18)사원의 이름과 팀장 이름을 출력
select e.ename 사원명, t.ename 관리자명 from emp e, emp t where e.mgr = t.eno;

19)'이선정'보다 급여를 많이 받는 사람을 출력
select ename from emp where sal > (select sal from emp where ename = '이선정');

20)'이선정'이 일하는 부서번호 혹은 제주도에 있는 부서 번호를 출력
select distinct dno from emp where ename = '이선정' or dno =(select dno from dept where dloc = '제주도');

<내장함수>
sql에서도 자바의 메소드와 마찬가지로 미리 만들어진함수를 사용할 수 있다.

round 반올림
select 56.7 from dual;
select round(56.7777, 0) from dual;
select round(56.7777, 1) from dual;
select round(556.7777, -1) from dual;

연습) 모든 사원의 이름과 id를 출력
select ename, email  from emp;

select ename, substr(email, 1, instr(email, '@')-1) id from emp;

create table member(
name varchar2(20),
age number
);

insert into member values('tiger', 20);
insert into member values('lion', 30);
insert into member values('Tiger', 30);
insert into member values(' Tiger', 20);
insert into member values('Tiger ', 20);
insert into member values(' Tiger ', 20);

연습) 이름이 'tiger'인 회원을 검색
select * from member where name = 'tiger';

select * from member where lower(ltrim(name)) = 'tiger';
select * from member where lower(rtrim(name)) = 'tiger';
select * from member where lower(trim(name)) = 'tiger';

연습) 모든 사원의 email의 길이 출력
select ename, length(email) from emp;

<to_date>
문자를 날짜로 변경하는 함수
select to_date('2019-06-27', 'yyyy-mm-dd') from dual;

<to_char>
날짜를 문자로 변경하는 함수

select to_char (sysdate, 'yyyy') from dual;
select to_char (sysdate, 'yyyy-mm') from dual;

연습) '서울'에 근무하는 사원들 중에 입사년도가 2016년 혹은
2018년인 근무자의 부서명, 사원명, 입사년도, 연봉을 출력.
연봉이 높은 순으로 출력하고 동일하면 이름 순.

select dname, ename, to_char(hiredate, 'yyyy'), (sal+comm)*12 
from dept d, emp e where d.dno = e.dno and dloc = '서울' 
and to_char(hiredate, 'yyyy') in ('2016', '2018') 
order by (sal+comm)*12 desc, ename;

select hiredate from 
emp where to_char(hiredate, 'yy') = '16'
or to_char(hiredate, 'yy') = '18';

select add_months(sysdate, 12) from dual;

연습) 개발부의 모든 근무자들은 입사일로부터 6개월 이내에 코딩테스트를
 해야한다. 대상자의 이름, 부서명, 관리자명, 코딩테스트 마감일, id를 출력.
관리자명순으로 출력하고 동일할 때에는 이름순으로 출력
코딩테스트 마감일은 'yyyy-mm-dd'형식으로 출력

select e.ename, d.dname, m.ename, to_char(add_months(e.hiredate, 6), 
'yyyy-mm-dd') 코딩테스트기한, 
substr(e.email, 1, instr(e.email, '@')-1) id 
from emp e, emp m, dept d where e.mgr = m.eno and e.dno = d.dno 
and d.dname like '개발%' order by m.ename, e.ename;


select e.ename, d.dname, m.ename,
substr(e.email, 1, instr(e.email, '@')-1) id 
from emp e, emp m, dept d where e.mgr = m.eno and e.dno = d.dno 
and d.dname like '개발%' order by m.ename, e.ename;


